---
import { Image } from "astro:assets";
import BaseLayout from "../layouts/BaseLayout.astro";

import "./post.css";
import type { Post } from "../types";

export async function getStaticPaths() {
  const response = await fetch("https://www.rdldn.co.uk/graphql", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      query: `
        query AllSlugs {
          posts {
            nodes {
              slug
            }
          }
        }
        `,
    }),
  });

  const { data } = await response.json();

  console.log(10, data);

  const posts = data.posts.nodes;

  const paths = posts.map((post: Post) => {
    return { params: post };
  });

  return paths;
}

const { slug } = Astro.params;

console.log(11, slug);

const singleResponse = await fetch("https://www.rdldn.co.uk/graphql", {
  method: "POST",
  headers: { "Content-Type": "application/json" },
  body: JSON.stringify({
    query: `
        query SinglePost($id: ID = "${slug}") {
          post(idType: SLUG, id: $id) {
            date
            content
            title
            featuredImage {
              node {
                sourceUrl
              }
            }
            seo {
              opengraphTitle
              opengraphDescription
              opengraphSiteName
              opengraphImage {
                uri
                altText
                mediaDetails {
                  file
                  height
                  width
                }
                mediaItemUrl
                sourceUrl
                srcSet
              }
            }
            tubeStations {
              nodes {
                name
              }
            }
            tubeLines {
              nodes {
                name
              }
            }
            prices {
              nodes {
                name
              }
            }
            ratings {
              nodes {
                name
              }
            }
            yearsOfVisit {
              nodes {
                name
              }
            }
            highlights {
              loathed
              loved
              website
              locationPost
              instagram
            }
          }
        }
        `,
  }),
});

const { data } = await singleResponse.json();

console.log(15, data);

const singlePost = data.post;
---

<BaseLayout
  pageTitle={singlePost.title}
  description={singlePost?.seo?.opengraphDescription}
  opengraphImage={singlePost.seo.opengraphImage.sourceUrl}
>
  <div class="image-container">
    <Image
      src={singlePost.featuredImage.node.sourceUrl}
      alt={singlePost.title}
      width={5000}
      height={5000}
      class="featured-image"
      loading="eager"
    />
    <div class="copyright-overlay">
      &copy; {new Date().getFullYear()} Roast Dinners in London. All rights reserved.
    </div>
  </div>
  <section class="post-title">
    <h2>{singlePost.title}</h2>
    <p>
      Published: {
        new Date(singlePost.date).toLocaleDateString("en-UK", {
          year: "numeric",
          month: "long",
          day: "numeric",
        })
      }
    </p>
  </section>
  <div class="container">
    <div set:html={singlePost.content} />
    <section id="summary" class="summary">
      <h3>Summary:</h3>
      <p>{singlePost.title}</p>
      <p>Station: {singlePost.tubeStations.nodes[0].name}</p>
      <p>
        Line: {
          singlePost.tubeLines.nodes
            .map((line: { name: string }) => line.name)
            .join(", ")
        }
      </p>
      <p>Price: {singlePost.prices.nodes[0].name}</p>
      <p>Rating: {singlePost.ratings.nodes[0].name}</p>
      <p>Year of Visit: {singlePost.yearsOfVisit.nodes[0].name}</p>
    </section>
    <section>
      <h3>Loved & Loathed:</h3>
      <p>Loved: {singlePost.highlights.loved}</p>
      <p>Loathed: {singlePost.highlights.loathed}</p>
    </section>
    <section>
      <h3>Get Booking:</h3>
      {
        singlePost.highlights.website && (
          <p>
            <a href={`${singlePost.highlights.website}`}>
              {" "}
              Book {singlePost.title}
            </a>
          </p>
        )
      }
      {
        singlePost.highlights.instagram && (
          <p>
            <a href={`${singlePost.highlights.instagram}`}>
              Follow on Instagram
            </a>
          </p>
        )
      }
    </section>
  </div>
</BaseLayout>
